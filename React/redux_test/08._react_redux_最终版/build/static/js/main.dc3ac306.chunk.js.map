{"version":3,"sources":["redux/constant.js","redux/action/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/action/person.js","App.jsx","redux/reducer/person.js","redux/reducer/index.js","redux/reducer/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADDPERSON","increment","data","type","Count","value","selectoption","props","decrement","incrementOfAdd","count","incrementOfAsync","incrementAsync","console","log","this","personCount","ref","c","onClick","Component","connect","state","person","length","time","dispatch","setTimeout","Person","add","name","nameNode","age","ageNode","id","nanoid","addPerson","placeholder","persons","map","item","personObj","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.dc3ac306.chunk.js","sourcesContent":["/* 常量值 */\r\nconst INCREMENT='increment'\r\nconst DECREMENT='decrement'\r\nconst ADDPERSON='addperson'\r\nexport{\r\n    INCREMENT, DECREMENT,ADDPERSON\r\n}","import { INCREMENT, DECREMENT } from \"../constant\";\r\n\r\n/*为count组件生成action对象  */\r\n\r\n/* 同步action，就是指action的值为object类型的一般对象 */\r\n\r\nconst increment = (data) => ({ type: INCREMENT, data });\r\nconst decrement = (data) => ({ type: DECREMENT, data });\r\n\r\n/* 异步action，就是指action的值为函数,异步action中一般都会调用同步action */\r\nconst incrementAsync = (data, time) => {  \r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment(data));\r\n    }, time);\r\n  };\r\n};\r\nexport { increment, decrement, incrementAsync };\r\n","/* eslint-disable no-labels */\r\n/* eslint-disable no-unused-expressions */\r\n/* 引入count的Ui组件 */\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n  increment,\r\n  decrement,\r\n  incrementAsync,\r\n  } from \"../../redux/action/count\";\r\n\r\n/* 引入connect用于连接UI组件与redux */\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Count extends Component {\r\n\r\n  increment = () => {\r\n    const { value } = this.selectoption;\r\n    this.props.increment(value*1)\r\n  };\r\n  decrement = () => {\r\n    const { value } = this.selectoption;\r\n    this.props.decrement(value*1)\r\n  };\r\n  incrementOfAdd =  () => {\r\n    const { value } = this.selectoption;\r\n    const {count}=this.props\r\n    if(count % 2!==0){\r\n      this.props.increment(value*1)\r\n    }\r\n    \r\n  };\r\n  incrementOfAsync = () => {\r\n    const { value } = this.selectoption;\r\n    this.props.incrementAsync(value*1,500)\r\n  };\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n      <h2>我是Count组件</h2>\r\n        <h2>当前求和值为：{this.props.count}</h2><br/>\r\n        <h2>总人数为{this.props.personCount}</h2>\r\n        <br />\r\n        <select ref={(c) => (this.selectoption = c)}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        <br />\r\n        <button onClick={this.increment}>+</button>\r\n        <button onClick={this.decrement}>-</button>\r\n        <button onClick={this.incrementOfAdd}>奇数加</button>\r\n        <button onClick={this.incrementOfAsync}>异步加</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/* 使用connect()()创建并暴露一个count的容器组件 */\r\nexport default connect(\r\n/* state是reducer中的状态 */\r\nstate => ({ count: state.count,personCount:state.person.length }),\r\n {\r\n  increment,\r\n  decrement,\r\n  incrementAsync,\r\n }\r\n)(Count);\r\n","import React, { Component } from \"react\";\r\nimport {nanoid} from 'nanoid';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {addPerson} from '../../redux/action/person';\r\n class Person extends Component {\r\n  add = () => {\r\n    const name = this.nameNode.value;\r\n    const age = this.ageNode.value;\r\n    let person={\r\n      id:nanoid(),\r\n      name,age\r\n    }\r\n    this.props.addPerson(person)\r\n    this.nameNode.value=''\r\n    this.ageNode.value=''\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>我是person组件</h2><br/>\r\n        <h2>当前求和为{this.props.count}</h2>\r\n        <div>\r\n          姓名：{\" \"}\r\n          <input\r\n            ref={(c) => (this.nameNode = c)}\r\n            placeholder=\"请输入您的姓名\"\r\n          />\r\n          <br />\r\n          年龄：\r\n          <input ref={(c) => (this.ageNode = c)} placeholder=\"请输入您的年龄\" />\r\n          <br />\r\n          <button onClick={this.add}>添加</button>\r\n          <ul>\r\n            {\r\n              this.props.persons.map(item=>{\r\n                return <li key={item.id}>姓名：{item.name}----年龄:{item.age}</li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state=>({persons:state.person,count:state.count}),\r\n  {addPerson}\r\n)(Person)","import {ADDPERSON} from '../constant'\r\n\r\nconst addPerson=(personObj)=>({\r\n    type:ADDPERSON,\r\n    data:personObj\r\n})\r\nexport {\r\n    addPerson,\r\n}\r\n","import React, { Component } from 'react'\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person'\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Count/>\r\n               <hr></hr>\r\n               <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { ADDPERSON } from \"../constant\";\r\nconst initState = [{ id: \"001\", name: \"公司\", age: 10 }];\r\nconst person = (preState = initState, action) => {\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case ADDPERSON:\r\n      return [data,...preState];\r\n\r\n    default:\r\n      return preState;\r\n  }\r\n};\r\nexport { person };\r\n","/* 该文件汇总所有的reducer */\r\n\r\n/* 引入汇总的reducer */\r\nimport { combineReducers } from \"redux\";\r\n\r\n//引入为Count组件服务的reducer\r\nimport count from \"./count\";\r\n\r\n//引入为Persion组件服务的reducer\r\nimport { person } from \"./person\";\r\n\r\n/*\r\n 汇总所有的reducer变为一个总的reducer \r\n combineReducers调用的时候传入的那个对象就是redux里面保存的那个总状态对象 \r\n*/\r\nexport default combineReducers({\r\n  count,\r\n  person,\r\n});\r\n","/* 1、改文件用于创建一个为Count服务的reducer，reducer的本质就是一个函数\r\n    2、reducer函数会接受到两个参数，分别为：之前的状态（preState）,动作对象（action)\r\n*/\r\nimport {INCREMENT, DECREMENT} from '../constant'\r\nconst initData=0\r\n\r\nexport default function countReducer(preState=initData,action) {\r\n    /* 从action对象中获取type和data */\r\n    const {type,data}=action\r\n    switch (type) {\r\n        case INCREMENT:\r\n          return preState+data;\r\n          case DECREMENT:\r\n            return preState-data;\r\n        default:\r\n           return preState;\r\n    }\r\n}","/* 该文件专门用于暴露一个store对象，整个应用只有一个srore对象 */\r\n//引入createStore，专门用于创建redux中最为核心的store对象\r\nimport {createStore,applyMiddleware} from 'redux'\r\n\r\n/* 引入redux-thunk，用于支持异步action */\r\nimport thunk from 'redux-thunk'\r\n\r\n/* 引入汇总之后的reducer */\r\nimport reducer from './reducer'\r\n/* 引入redux-devtools-extension */\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  \r\n/* 此处需要用provider包裹App,目的是让所有的后代容器组件都能接收到store */\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n  \r\n);\r\n"],"sourceRoot":""}